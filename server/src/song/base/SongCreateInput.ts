/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AlbumCreateNestedManyWithoutSongsInput } from "./AlbumCreateNestedManyWithoutSongsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { ArtistCreateNestedManyWithoutSongsInput } from "./ArtistCreateNestedManyWithoutSongsInput";
import { PlaylistCreateNestedManyWithoutSongsInput } from "./PlaylistCreateNestedManyWithoutSongsInput";
import { UserCreateNestedManyWithoutSongsInput } from "./UserCreateNestedManyWithoutSongsInput";
import { OriginWhereUniqueInput } from "../../origin/base/OriginWhereUniqueInput";
@InputType()
class SongCreateInput {
  @ApiProperty({
    required: false,
    type: () => AlbumCreateNestedManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => AlbumCreateNestedManyWithoutSongsInput)
  @IsOptional()
  @Field(() => AlbumCreateNestedManyWithoutSongsInput, {
    nullable: true,
  })
  album?: AlbumCreateNestedManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: () => ArtistCreateNestedManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => ArtistCreateNestedManyWithoutSongsInput)
  @IsOptional()
  @Field(() => ArtistCreateNestedManyWithoutSongsInput, {
    nullable: true,
  })
  artist?: ArtistCreateNestedManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: () => PlaylistCreateNestedManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => PlaylistCreateNestedManyWithoutSongsInput)
  @IsOptional()
  @Field(() => PlaylistCreateNestedManyWithoutSongsInput, {
    nullable: true,
  })
  inPlaylist?: PlaylistCreateNestedManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutSongsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutSongsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutSongsInput, {
    nullable: true,
  })
  likedBy?: UserCreateNestedManyWithoutSongsInput;

  @ApiProperty({
    required: false,
    type: () => OriginWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OriginWhereUniqueInput)
  @IsOptional()
  @Field(() => OriginWhereUniqueInput, {
    nullable: true,
  })
  origin?: OriginWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}
export { SongCreateInput };
